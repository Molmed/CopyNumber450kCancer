print("Stopped")
assign("to.stop",1,envir = .GlobalEnv)
graphics.off()
return()#
}
if((click3$x>A&click3$x<B&click3$y>(Y1)&click3$y<(Y2))){ #median
print("median")
forMedian    <- sam[which(sam$Chromosome!="chrX" & sam$Chromosome!="chrY"),c("Num.of.Markers","Mean")]  #removing the X and Y chrs from the mean
subsetMeans  <- forMedian$Mean[(which(forMedian$Mean>up[1] & forMedian$Mean<up[2]))]
subsetMarkers<- forMedian$Num.of.Markers[(which(forMedian$Mean>up[1] & forMedian$Mean<up[2]))]
move <- weighted.median(subsetMeans,subsetMarkers)
sam$Mean <- sam$Mean-move
#plot the modified plot
forDen<-sam[which(sam$Chromosome!="chrX" & sam$Chromosome!="chrY"),c("Num.of.Markers","Mean")]
d<-density(forDen$Mean,weights=forDen$Num.of.Markers/sum(forDen$Num.of.Markers),na.rm=T,kernel = c("gaussian"),adjust=0.15,n=512)
plot(d$y,d$x,ylim=c(-1,1),type='l',ylab="",xlab="",axes=FALSE,xlim=rev(range(d$y)))
abline(h = c(0,-cutoff,cutoff), lty = 3)
box()
legend("bottomleft", legend="Density",cex=1)
plotRegions(sam,cutoff=cutoff,...)
legend("topleft", legend=c(
paste("Upper:", round(up[2], 3) ),
paste("Lower:", round(up[1], 3) ),
paste("W.Median:",round(move, 4) )),
title="Selected",cex=0.75)
rect(A, Y1, B, Y2,density = NULL , angle = 45, col = "green", border = NULL, lty = par("lty"), lwd = par("lwd"))
rect(A2, Y1, B2, Y2,density = NULL, angle = 45, col = "red", border = NULL, lty = par("lty"), lwd = par("lwd"))
text(((A+B)/2),((Y1+Y2)/2),labels=paste("Save"),cex=0.75 )
text(((A2+B2)/2),((Y1+Y2)/2),labels=paste("modify"),cex=0.75)
click<-locator(n = 1,type = "l")
while ((click$x>A&click$x<B&click$y>(Y1)&click$y<(Y2))==F & (click$x>A2&click$x<B2&click$y>(Y1)&click$y<(Y2))==F){
click<-locator(n = 1,type = "l")
}
if((click$x>A&click$x<B&click$y>(Y1)&click$y<(Y2))){ #save
print(paste(name,"modification...saved"))
regions[which(regions$Sample %in% as.character(name)),"Mean"]<-sam$Mean
mod[which(mod$Sample %in% as.character(name)),2:6]<-c(round(up[1], 3),round(up[2], 3),round(move, 4),round(-move, 4),"Yes_using_median")
assign("regions",regions, envir = .GlobalEnv)
assign("mod",mod, envir = .GlobalEnv)
if(plots==T){
print(paste("Saving the plot for ...",name))
subDir<-"reviewed_plots"
dir.create(file.path(mainDir, subDir), showWarnings = FALSE)  #mainDir was saved in the readData function
setwd(file.path(mainDir, subDir))
png(filename = paste(SL[which(SL$Sample %in% as.character(name)),"Number"],"_",name,"_reviewed_plot.png",sep=""), width = 1920, height = 1200)
par(mfrow=c(2,2),mar= c(5.1,0,4.1,0),oma=c(2,0,0,4))
layout(matrix(c(1,2,3,4),2,2,byrow=TRUE), widths=c(3,21), heights=c(10,10), TRUE)
#original plots
sam.original <- regions_save[which(regions_save$Sample %in% as.character(name)),]
forDen<-sam.original[which(sam.original$Chromosome!="chrX" & sam.original$Chromosome!="chrY"),c("Num.of.Markers","Mean")]
d<-density(forDen$Mean,weights=forDen$Num.of.Markers/sum(forDen$Num.of.Markers),na.rm=T,kernel = c("gaussian"),adjust=0.20,n=1024)
plot(d$y,d$x,ylim=c(-1,1),type='l',ylab="",xlab="",axes=FALSE,xlim=rev(range(d$y)))
abline(h = c(0,-cutoff,cutoff), lty = 3)
box()
legend("bottomleft", legend="Density",cex=1)
plotRegions(sam.original,cutoff=cutoff,markers=markers,main=paste("Sample:: ",name,"       Info:: ",SL[which(SL$Sample %in% as.character(name)),"Comment"]))
#the reviewed plots
draw <- regions[which(regions$Sample %in% as.character(name)),]
forDen<-draw[which(draw$Chromosome!="chrX" & draw$Chromosome!="chrY"),c("Num.of.Markers","Mean")]
d<-density(forDen$Mean,weights=forDen$Num.of.Markers/sum(forDen$Num.of.Markers),na.rm=T,kernel = c("gaussian"),adjust=0.20,n=1024)
plot(d$y,d$x,ylim=c(-1,1),type='l',ylab="",xlab="",axes=FALSE,xlim=rev(range(d$y)))
abline(h = c(0,-cutoff,cutoff), lty = 3)
box()
legend("bottomleft", legend="Density",cex=1)
plotRegions(draw,cutoff=cutoff,markers=markers,main=paste("Reviewed plot"))
dev.off()
setwd(file.path(mainDir))
}
}
if((click$x>A2&click$x<B2&click$y>(Y1)&click$y<(Y2))){ #modify
print("modify...")
Review(name)
return()
}
}
if((click3$x>A2&click3$x<B2&click3$y>(Y1)&click3$y<(Y2))){ #peak
print("peak")
d.mod.x<-d$x[which(d$x>up[1] & d$x<up[2])]
d.mod.y<-d$y[which(d$x>up[1] & d$x<up[2])]
i<-which.max(d.mod.y)
max.peak.value<-d.mod.x[i]
sam$Mean <- sam$Mean-max.peak.value
#plot the modified plot
forDen<-sam[which(sam$Chromosome!="chrX" & sam$Chromosome!="chrY"),c("Num.of.Markers","Mean")]
d<-density(forDen$Mean,weights=forDen$Num.of.Markers/sum(forDen$Num.of.Markers),na.rm=T,kernel = c("gaussian"),adjust=0.15,n=512)
plot(d$y,d$x,type='l',ylim=c(-1,1),ylab="",xlab="",axes=FALSE,xlim=rev(range(d$y)))
abline(h = c(0,-cutoff,cutoff), lty = 3)
box()
legend("bottomleft", legend="Density",cex=1)
plotRegions(sam,cutoff=cutoff,...)
legend("topleft", legend=c(
paste("Upper:", round(up[2], 3) ),
paste("Lower:", round(up[1], 3) ),
paste("Peak at:",round(max.peak.value, 4) )),
title="Selected",cex=0.75)
rect(A, Y1, B, Y2,density = NULL , angle = 45, col = "green", border = NULL, lty = par("lty"), lwd = par("lwd"))
rect(A2, Y1, B2, Y2,density = NULL, angle = 45, col = "red", border = NULL, lty = par("lty"), lwd = par("lwd"))
text(((A+B)/2),((Y1+Y2)/2),labels=paste("Save"),cex=0.75 )
text(((A2+B2)/2),((Y1+Y2)/2),labels=paste("modify"),cex=0.75)
click<-locator(n = 1,type = "l")
while ((click$x>A&click$x<B&click$y>(Y1)&click$y<(Y2))==F & (click$x>A2&click$x<B2&click$y>(Y1)&click$y<(Y2))==F){
click<-locator(n = 1,type = "l")
}
if((click$x>A&click$x<B&click$y>(Y1)&click$y<(Y2))){ #save
print(paste(name,"modification...saved"))
regions[which(regions$Sample %in% as.character(name)),"Mean"]<-sam$Mean
mod[which(mod$Sample %in% as.character(name)),2:6]<-c(round(up[1], 3),round(up[2], 3),round(max.peak.value, 4),round(-max.peak.value, 4),"Yes_using_peak")
assign("regions",regions, envir = .GlobalEnv)
assign("mod",mod, envir = .GlobalEnv)
if(plots==T){
print(paste("Saving the plot for ...",name))
subDir<-"reviewed_plots"
dir.create(file.path(mainDir, subDir), showWarnings = FALSE)  #mainDir was saved in the readData function
setwd(file.path(mainDir, subDir))
png(filename = paste(SL[which(SL$Sample %in% as.character(name)),"Number"],"_",name,"_reviewed_plot.png",sep=""), width = 1920, height = 1200)
par(mfrow=c(2,2),mar= c(5.1,0,4.1,0),oma=c(2,0,0,4))
layout(matrix(c(1,2,3,4),2,2,byrow=TRUE), widths=c(3,21), heights=c(10,10), TRUE)
#original plots
sam.original <- regions_save[which(regions_save$Sample %in% as.character(name)),]
forDen<-sam.original[which(sam.original$Chromosome!="chrX" & sam.original$Chromosome!="chrY"),c("Num.of.Markers","Mean")]
d<-density(forDen$Mean,weights=forDen$Num.of.Markers/sum(forDen$Num.of.Markers),na.rm=T,kernel = c("gaussian"),adjust=0.20,n=1024)
plot(d$y,d$x,ylim=c(-1,1),type='l',ylab="",xlab="",axes=FALSE,xlim=rev(range(d$y)))
abline(h = c(0,-cutoff,cutoff), lty = 3)
box()
legend("bottomleft", legend="Density",cex=1)
plotRegions(sam.original,cutoff=cutoff,markers=markers,main=paste("Sample:: ",name,"       Info:: ",SL[which(SL$Sample %in% as.character(name)),"Comment"]))
#the reviewed plots
draw <- regions[which(regions$Sample %in% as.character(name)),]
forDen<-draw[which(draw$Chromosome!="chrX" & draw$Chromosome!="chrY"),c("Num.of.Markers","Mean")]
d<-density(forDen$Mean,weights=forDen$Num.of.Markers/sum(forDen$Num.of.Markers),na.rm=T,kernel = c("gaussian"),adjust=0.20,n=1024)
plot(d$y,d$x,ylim=c(-1,1),type='l',ylab="",xlab="",axes=FALSE,xlim=rev(range(d$y)))
abline(h = c(0,-cutoff,cutoff), lty = 3)
box()
legend("bottomleft", legend="Density",cex=1)
plotRegions(draw,cutoff=cutoff,markers=markers,main=paste("Reviewed plot"))
dev.off()
setwd(file.path(mainDir))
}
}
if((click$x>A2&click$x<B2&click$y>(Y1)&click$y<(Y2))){ #modify
print("modify...")
Review(name)
return()
}
}
}
i<-1
while (i<=length(select)){
if(i<1) {i<-1}
print(paste("Sample number:",i, "      name:",SL[select[i],"Sample"]))
Review(SL[select[i],"Sample"])
if(to.stop==3){i<-(i-2)}
if(to.stop==1){
rm(to.stop,envir =.GlobalEnv)
break
}
i<-i+1
}
setwd(file.path(mainDir))
print("saving the file of the reviewed regions...please wait...")
write.csv(regions,file="reviewed_regions.csv")
print("saving the file of the modification...please wait...")
write.csv(mod,file="Manual_corrections.csv")
print("Done.")
}
#-  ------------------------------------------------------
#----------------------------------------------------------------
#This function to plot only oone plot per page
PlotCNV<- function(select,comment=F,cutoff=0.1,markers=20){
if (missing(select)) {
select<-c(1:length(SL[,"Sample"]))
}
print("Plotting...")
subDir<-"plots"
dir.create(file.path(mainDir, subDir), showWarnings = FALSE)  #mainDir was saved in the readData function
setwd(file.path(mainDir, subDir))
for(i in 1:length(SL[,"Sample"])){
#the plots
png(filename = paste(select[i],"_",SL[select[i],"Sample"],"_plot.png",sep=""), width = 1920, height = 1200)
par(mfrow=c(1,2),mar= c(5.1,0,4.1,0),oma=c(2,0,0,4))
layout(matrix(c(1,2),1,2,byrow=TRUE), widths=c(3,21), heights=c(10,10), TRUE)
#the density
draw <- regions[which(regions$Sample %in% SL[select[i],"Sample"]),]
forDen<-draw[which(draw$Chromosome!="chrX" & draw$Chromosome!="chrY"),c("Num.of.Markers","Mean")]
d<-density(forDen$Mean,weights=forDen$Num.of.Markers/sum(forDen$Num.of.Markers),na.rm=T,kernel = c("gaussian"),adjust=0.20,n=1024)
plot(d$y,d$x,ylim=c(-1,1),type='l',ylab="",xlab="",axes=FALSE,xlim=rev(range(d$y)))
abline(h = c(0,-cutoff,cutoff), lty = 3)
box()
legend("bottomleft", legend="Density",cex=1)
info<-""
if(comment==T){
Comment <- SL[select[i],"Comment"]
info<-paste("       Info:: ",Comment)
}
plotRegions(draw,cutoff=cutoff,markers=markers,main=paste("Sample::",SL[select[i],"Sample"],info))
dev.off()
}
graphics.off()
setwd(file.path(mainDir))
}
#----------------------------------------------------------------
#for merging based on the cutoff and number of markers in the region
PlotMerged<-function(file,cutoff=0.1,markers=20,...){
if (missing(file)) {
file<-(regions)
print("regions file is selected")
}
file<-file[which(file$Chromosome!="chrX" & file$Chromosome!="chrY"),] #removing X and Y chr.s
if(hasArg(markers)){
file$Mean[which(file$Num.of.Markers<=markers)]<-0
}
forChange<-file$Mean
forChange[forChange>cutoff]<-(cutoff)+0.01
forChange[forChange<(-cutoff)]<-(-cutoff)-0.01
forChange[forChange<cutoff&forChange>(-cutoff)]<-0
file$Mean<-forChange
subDir<-"Merged_plots"
dir.create(file.path(mainDir, subDir), showWarnings = FALSE)  #mainDir was saved in the readData function
setwd(file.path(mainDir, subDir))
for (i in 1:length(SL[,"Sample"])){  #plotting
print(paste("Plotting....Sample number",i))
sam<-file[which(file$Sample %in% as.character(SL[i,"Sample"])),]
png(filename = paste(i,"_",SL[i,"Sample"],"_merged_plot_","cutoff_",cutoff,".png",sep=""), width = 1920, height = 1200)
plotRegions(sam,main=paste("CNV_450K::",SL[i,"Sample"],SL[i,"Comment"]),cutoff=cutoff)
dev.off()
}
setwd(file.path(mainDir))
print("Plotting... Done.")
}
#----------------------------------------------------------------
#----------------------------------------------------------------
#-----------------------------END--------------------------------
#----------------------------------------------------------------
#----------------------------------------------------------------
PlotCNV()
setwd("M:/Open/Marzouka/CopyNumber450kCancer/install")
#install.packages("CopyNumber450kCancer_1.0.tar.gz")
install.packages("CopyNumber450kCancer_1.0.zip",repos =NULL)
setwd("M:/Open/Marzouka/CopyNumber450kCancer/install")
#install.packages("CopyNumber450kCancer_1.0.tar.gz")
install.packages("CopyNumber450kCancer_1.0.zip",repos =NULL)
library("CopyNumber450kCancer")
setwd("M:/Open/Marzouka/CopyNumber450kCancer/data")
ReadData("regions.csv","sample_list.csv")
ReviewPlot(plots=T)
setwd("~/R/CopyNumber450kCancer")
library(devtools)
check(cran=TRUE)
predict()
predict
library(dplyr)
install()
setwd("M:/Open/Marzouka/CopyNumber450kCancer/install")
setwd("M:/Open/Marzouka/CopyNumber450kCancer/data")
ReadData("regions.csv","sample_list.csv")
?rm
library(CopyNumber450kCancer)
help(package="CopyNumber450kCancer")
obj <- ReadData("regions.csv","sample_list.csv")
install()
setwd("~/R/CopyNumber450kCancer")
install()
setwd("M:/Open/Marzouka/CopyNumber450kCancer/data")
obj <- ReadData("regions.csv","sample_list.csv")
obj2 <- AutoCorrectPeak(object = obj)
obj2 <- AutoCorrectPeak(object = obj)
obj3<-ReviewPlot(obj2,plots=T)
PlotCNV(obj3,comment=T)
obj
print
obj$regions$Sample
sum(unique(obj$regions$Sample))
length(unique(obj$regions$Sample))
print.CopyNumber450kCancer_data <- function(x, ...){
cat(sprintf("CopyNumber450kCancer data with %i samples.",
length(unique(x$regions$Sample))))
}
obj
obj$SL$Number
obj$SL$Sample
print.CopyNumber450kCancer_data <- function(x, ...){
cat(sprintf("CopyNumber450kCancer data with %i samples in regions and %i samples in sample list.",
length(unique(x$regions$Sample)),
length(unique(x$SL$Sample))
))
}
obj3
x <- obj
cat("Contains: ", names(x), "\n")
cat("Contains: ", paste(names(x), collapse = "\n"), "\n")
cat("Contains:\n", paste("\t", names(x), collapse = "\n"), "\n")
cat("Contains:\n", paste("   ", names(x), collapse = "\n"), "\n")
cat("Contains:\n", paste("  ", names(x), collapse = "\n"), "\n", sep="")
print.CopyNumber450kCancer_data <- function(x, ...){
cat(sprintf("CopyNumber450kCancer data with %i samples in regions and %i samples in sample list.",
length(unique(x$regions$Sample)),
length(unique(x$SL$Sample))
))
cat("Contains:\n", paste("  ", names(x), collapse = "\n"), "\n", sep="")
}
obj
obj
print.CopyNumber450kCancer_data <- function(x, ...){
cat(sprintf("CopyNumber450kCancer data with %i samples in regions and %i samples in sample list.\n",
length(unique(x$regions$Sample)),
length(unique(x$SL$Sample))
))
cat("Contains:\n", paste("  ", names(x), collapse = "\n"), "\n", sep="")
}
obj
install()
setwd("~/R/CopyNumber450kCancer")
install()
system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
x <- read.csv(system.file("extdata", "regions.csv", package="CopyNumber450kCancer"))
x
ReadData(system.file("extdata", "regions.csv", package="CopyNumber450kCancer"))
ReadData(system.file("extdata", "regions.csv", package="CopyNumber450kCancer"),
system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer"))
obj <- .Last.value
obj
x <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
x
xf <- read.csv(x)
View(xf)
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer"),
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
ReadData(regions,sample_list)
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
ReadData(regions,sample_list)
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
object <- ReadData(regions,sample_list)
AutoCorrectPeak(object)
install()
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
object <- ReadData(regions,sample_list)
AutoCorrectPeak(object)
install()
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
object <- ReadData(regions,sample_list)
AutoCorrectPeak(object)
install()''
install()
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
object <- ReadData(regions,sample_list)
AutoCorrectPeak(object)
install()
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
object <- ReadData(regions,sample_list)
AutoCorrectPeak(object)
object
ReviewPlot
ReviewPlot(object)
install()
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
object <- ReadData(regions,sample_list)
AutoCorrectPeak(object)
ReviewPlot(object)
install()
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
object <- ReadData(regions,sample_list)
AutoCorrectPeak(object)
ReviewPlot(object)
PlotCNV(object)
PlotMerged(object)
PlotMerged(object,comment = T, cutoff = 0.2, markers = 5)
PlotMerged(object,c(1,4),comment = T, cutoff = 0.2, markers = 5)
PlotCNV(object, c(1,4),comment=F,cutoff=0.1,markers=20)
PlotCNV<- function(object, select,comment=F,cutoff=0.1,markers=20){
if (missing(select)) {
select<-c(1:length(object$SL[,"Sample"]))
}
print("Plotting...")
subDir<-"plots"
dir.create(file.path(object$mainDir, subDir), showWarnings = FALSE)
setwd(file.path(object$mainDir, subDir))
for(i in 1:length(select)){
#the plots
png(filename = paste(select[i],"_",object$SL[select[i],"Sample"],"_plot.png",sep=""), width = 1920, height = 1200)
par(mfrow=c(1,2),mar= c(5.1,0,4.1,0),oma=c(2,0,0,4))
layout(matrix(c(1,2),1,2,byrow=TRUE), widths=c(3,21), heights=c(10,10), TRUE)
#the density
draw <- object$regions[which(object$regions$Sample %in% object$SL[select[i],"Sample"]),]
forDen<-draw[which(draw$Chromosome!="chrX" & draw$Chromosome!="chrY"),c("Num.of.Markers","Mean")]
d<-density(forDen$Mean,weights=forDen$Num.of.Markers/sum(forDen$Num.of.Markers),na.rm=T,kernel = c("gaussian"),adjust=0.20,n=1024)
plot(d$y,d$x,ylim=c(-1,1),type='l',ylab="",xlab="",axes=FALSE,xlim=rev(range(d$y)))
abline(h = c(0,-cutoff,cutoff), lty = 3)
box()
legend("bottomleft", legend="Density",cex=1)
info<-""
if(comment==T){
Comment <- object$SL[select[i],"Comment"]
info<-paste("       Info:: ",Comment)
}
plotRegions(draw,cutoff=cutoff,markers=markers,main=paste("Sample::",object$SL[select[i],"Sample"],info))
dev.off()
}
graphics.off()
setwd(file.path(object$mainDir))
}
PlotCNV(object, select= c(1,4), comment=F, cutoff=0.1, markers=20)
install()
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
# Creat the object for the package
object <- ReadData(regions,sample_list)
# Baseline autocorrection,
# this will creat different plot and QC and new regions file in the working directory
object <- AutoCorrectPeak(object)
# For manual revision and manual baseline determination
# object <- ReviewPlot(object)
# To plot the final plots
PlotCNV(object) # to plot all the samples
PlotCNV(object, select= c(1,4), comment=FALSE, cutoff=0.1, markers=20) # to plot some samples
# Optional function to plot all the amplifications and delections in the same level
PlotMerged(object,comment = TRUE, cutoff = 0.2, markers = 5)
install()
biocLite("CopyNumber450kCancer")
source("http://bioconductor.org/biocLite.R")
biocLite("BiocCheck")
library(BiocCheck)
library(BiocCheck)
BiocCheck("CopyNumber450kCancer")
install()
BiocCheck("CopyNumber450kCancer")
BiocCheck("CopyNumber450kCancer.Rproj")
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
plotRegions(regions[1:100,])
plotRegions(regions[1:10,])
plotRegions(regions)
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
plotRegions(regions)
install()
install()
getwd()
library(CopyNumber450kCancer)
#to load the example regions.csv and sample_list.csv files
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
plotRegions(regions)
plotRegions(regions[1:2,])
plotRegions(regions[,])
plotRegions(regions[])
plotRegions(regions)
plotRegions()
regions <- system.file("extdata", "regions.csv", package="CopyNumber450kCancer")
sample_list <- system.file("extdata", "sample_list.csv", package="CopyNumber450kCancer")
# Creat the object for the package
object <- ReadData(regions,sample_list)
plotRegions(object = object$regions)
plotRegions(object = object$regions[1:10,])
plotRegions(object = object$regions[,])
plotRegions(object$regions)
library(CopyNumber450kCancer)
View(xf)
search()
library(CopyNumber450kCancer)
BiocCheck
BiocCheck()
install.packages("CopyNumber450kCancer")
library(CopyNumber450kCancer)
install.packages("CopyNumber450kCancer")
install.packages("CopyNumber450kCancer")
library(CopyNumber450kCancer)
install.packages("CopyNumber450kCancer")
install.packages("CopyNumber450kCancer")
library(BiocCheck)
BiocCheck()
setwd("~/R")
BiocCheck("CopyNumber450kCancer_1.0.3.tar.gz")
getwd()
BiocCheck("CopyNumber450kCancer_1.0.3.tar.gz")
BiocCheck("CopyNumber450kCancer_1.0.3.tar.gz")
BiocCheck("CopyNumber450kCancer_1.0.3.tar.gz")
BiocCheck("CopyNumber450kCancer_1.0.3.tar.gz")
library("tools", lib.loc="C:/Program Files/R/R-3.1.3/library")
install()
install.packages("CopyNumber450kCancer_1.0.3.tar.gz")
librar("CopyNumber450kCancer")
library("CopyNumber450kCancer")
names(vignetteEngine(package = 'CopyNumber450kCancer'))
BiocCheck("CopyNumber450kCancer_1.0.3.tar.gz")
install.packages("~/R/CopyNumber450kCancer_1.0.3.zip", repos = NULL, type = "win.binary")
library(CopyNumber450kCancer)
regions <- system.file("extdata", "regions.csv", package = "CopyNumber450kCancer")
sample_list <- system.file("extdata",
"sample_list.csv", package = "CopyNumber450kCancer")
object <- ReadData(regions, sample_list)
object <- AutoCorrectPeak(object)
object <- ReviewPlot(object)
install.packages("~/R/CopyNumber450kCancer_1.0.4.zip", repos = NULL, type = "win.binary")
library(CopyNumber450kCancer)
library(CopyNumber450kCancer)
devtools::load_all(".")
Sys.setenv(R_GSCMD = "C:\\Program Files (x86)\\gs\\gs9.19\\bin\\gswin32c.exe")
Sys.setenv(R_GSCMD = "C:\\Program Files (x86)\\gs\\gs9.25\\bin\\gswin32c.exe")
library(CopyNumber450kCancer)
library(CopyNumber450kCancer)
Sys.setenv(R_GSCMD = "C:\\Program Files (x86)\\gs\\gs9.25\\bin\\gswin32c.exe")
library(CopyNumber450kCancer)
check --as-cran
Sys.setenv(R_GSCMD = "C:\\Program Files (x86)\\gs\\gs9.25\\bin\\gswin32c.exe")
library(CopyNumber450kCancer)
library(CopyNumber450kCancer)
